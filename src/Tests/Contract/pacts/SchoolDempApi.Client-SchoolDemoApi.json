{
  "consumer": {
    "name": "SchoolDempApi.Client"
  },
  "interactions": [
    {
      "description": "a request to add a new student with name Mocky",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sIdNew} will be created",
          "params": {
            "GPA": null,
            "name": "Mocky",
            "sIdNew": 4567
          }
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": "Mocky"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/student/"
      },
      "response": {
        "body": {
          "content": 4567,
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to add a new student with name Mocky McMockName",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sIdNew} will be created",
          "params": {
            "GPA": 3.81,
            "name": "Mocky McMockName",
            "sIdNew": 1234
          }
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky McMockName"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/student/"
      },
      "response": {
        "body": {
          "content": 1234,
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to add a new student without a name",
      "pending": false,
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": "  \t\r\n   "
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/student/"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "name": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors.name[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student with invalid sId -1234",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be deleted"
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/student/-1234"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "sId": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors.sId[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student with sId 1122",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} does not exist and will not be deleted",
          "params": {
            "sId": 1122
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/student/1122"
      },
      "response": {
        "body": {
          "content": false,
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 404
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student with sId 123",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} exists and will be deleted",
          "params": {
            "sId": 123
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/student/123"
      },
      "response": {
        "body": {
          "content": true,
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student with sId 456",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} exists and will be deleted",
          "params": {
            "sId": 456
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/student/456"
      },
      "response": {
        "body": {
          "content": true,
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student with an invalid id",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/student/-1000"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "sId": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors.sId[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          }
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student with id 1",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} exists",
          "params": {
            "GPA": 3,
            "name": "Mocky",
            "sId": 1
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/student/1"
      },
      "response": {
        "body": {
          "content": {
            "GPA": 3,
            "name": "Mocky",
            "sId": 1
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student with id 1234",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} exists",
          "params": {
            "GPA": 3.81,
            "name": "Mocky McMockName",
            "sId": 1234
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/student/1234"
      },
      "response": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky McMockName",
            "sId": 1234
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student with id 404",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} does not exist",
          "params": {
            "sId": 404
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/student/404"
      },
      "response": {
        "body": {
          "content": {
            "status": 404,
            "title": "error title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json"
          ]
        },
        "matchingRules": {
          "body": {
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          }
        },
        "status": 404
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student with id 4567",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} exists",
          "params": {
            "GPA": null,
            "name": "Mocky McMockName",
            "sId": 4567
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/student/4567"
      },
      "response": {
        "body": {
          "content": {
            "GPA": null,
            "name": "Mocky McMockName",
            "sId": 4567
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to patch a non-existant student with sId 4567",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} does not exist"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky Mockson"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PATCH",
        "path": "/students/4567"
      },
      "response": {
        "status": 404
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to patch a student with sId 123",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} exists",
          "params": {
            "GPA": 3.91,
            "name": "EXISTING STUDENT NAME",
            "sId": 123
          }
        },
        {
          "name": "a student with sId {sId} will be updated",
          "params": {
            "GPA": 3.91,
            "name": "Mocky",
            "sId": 123
          }
        }
      ],
      "request": {
        "body": {
          "content": {
            "name": "Mocky"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PATCH",
        "path": "/students/123"
      },
      "response": {
        "body": {
          "content": {
            "GPA": 3.91,
            "name": "Mocky",
            "sId": 123
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to patch a student with sId 123",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} exists",
          "params": {
            "GPA": 3.91,
            "name": "EXISTING STUDENT NAME",
            "sId": 123
          }
        },
        {
          "name": "a student with sId {sId} will be updated",
          "params": {
            "GPA": 3.52,
            "name": "EXISTING STUDENT NAME",
            "sId": 123
          }
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.52
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PATCH",
        "path": "/students/123"
      },
      "response": {
        "body": {
          "content": {
            "GPA": 3.52,
            "name": "EXISTING STUDENT NAME",
            "sId": 123
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to patch a student with sId 1234 and invalid name",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be updated"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": null
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PATCH",
        "path": "/students/1234"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "name": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors.name[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to patch a student with sId 4567 and invalid name",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be updated"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": ""
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PATCH",
        "path": "/students/4567"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "name": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors.name[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student with sId 123",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} exists and will be updated",
          "params": {
            "GPA": 3.81,
            "name": "Mocky",
            "sId": 123
          }
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/123"
      },
      "response": {
        "body": {
          "content": true,
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student with sId 1234 and invalid name",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be updated"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": null
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/1234"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "name": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors.name[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student with sId 4567",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} exists and will be updated",
          "params": {
            "GPA": null,
            "name": "Mocky",
            "sId": 4567
          }
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": "Mocky"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/4567"
      },
      "response": {
        "body": {
          "content": true,
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student with sId 4567 and invalid name",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} does not exist"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky Mockson"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/4567"
      },
      "response": {
        "body": {
          "content": false,
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 404
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student with sId 4567 and invalid name",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be updated"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": ""
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/4567"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "name": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors.name[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    }
  ],
  "metadata": {
    "pactRust": {
      "ffi": "0.4.16",
      "models": "1.1.19"
    },
    "pactSpecification": {
      "version": "4.0"
    }
  },
  "provider": {
    "name": "SchoolDemoApi"
  }
}