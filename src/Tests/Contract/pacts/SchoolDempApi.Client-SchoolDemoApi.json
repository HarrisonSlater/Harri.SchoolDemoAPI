{
  "consumer": {
    "name": "SchoolDempApi.Client"
  },
  "interactions": [
    {
      "description": "a bad request to patch a student with sId 1011",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be updated"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.811,
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PATCH",
        "path": "/students/1011"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "GPA": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors.GPA[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to patch a student with sId 1234",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be updated"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": null
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PATCH",
        "path": "/students/1234"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "name": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors.name[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to patch a student with sId 4567",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be updated"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": ""
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PATCH",
        "path": "/students/4567"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "name": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors.name[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to patch a student with sId 8910",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be updated"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": -2.2,
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PATCH",
        "path": "/students/8910"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "GPA": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors.GPA[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to query students: Test Student, {\"GPA\":{\"isNull\":false,\"lt\":null,\"gt\":4,\"eq\":null}} Test Case 6",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.gt": [
            "4"
          ],
          "GPA.isNull": [
            "False"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to query students: Test Student, {\"GPA\":{\"isNull\":null,\"lt\":4,\"gt\":null,\"eq\":4}} Test Case 2",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "GPA.lt": [
            "4"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to query students: Test Student, {\"GPA\":{\"isNull\":null,\"lt\":null,\"gt\":4,\"eq\":4}} Test Case 1",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "GPA.gt": [
            "4"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to query students: Test Student, {\"GPA\":{\"isNull\":null,\"lt\":null,\"gt\":null,\"eq\":-1}} Test Case 3",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "-1"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to query students: Test Student, {\"GPA\":{\"isNull\":null,\"lt\":null,\"gt\":null,\"eq\":0}} Test Case 4",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "0"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to query students: Test Student, {\"GPA\":{\"isNull\":true,\"lt\":null,\"gt\":null,\"eq\":4}} Test Case 5",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "GPA.isNull": [
            "True"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to update a student with sId 1234 and invalid name 1",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be updated"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": null
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/1234"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "name": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.name[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to update a student with sId 4567 and invalid name 2",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be updated"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": ""
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/4567"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "name": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.name[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to update a student with sId 4567 and invalid name 3",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be updated"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": -2,
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/4567"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "GPA": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.GPA[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to update a student with sId 4567 and invalid name 4",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be updated"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.811,
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/4567"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "GPA": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.GPA[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to add a new student with name Mocky",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sIdNew} will be created",
          "params": {
            "GPA": null,
            "name": "Mocky",
            "sIdNew": 4567
          }
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": "Mocky"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": 4567,
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to add a new student with name Mocky McMockName",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sIdNew} will be created",
          "params": {
            "GPA": 3.81,
            "name": "Mocky McMockName",
            "sIdNew": 1234
          }
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky McMockName"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": 1234,
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to add a student",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to add a student with rest response",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/students/123"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student with invalid sId -1234",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be deleted"
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/students/-1234"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "sId": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors.sId[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student with rest response",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/students/123"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student with sId 1122",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} does not exist and will not be deleted",
          "params": {
            "sId": 1122
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/students/1122"
      },
      "response": {
        "status": 404
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student with sId 123",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} exists and will be deleted",
          "params": {
            "sId": 123
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/students/123"
      },
      "response": {
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student with sId 456",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} exists and will be deleted",
          "params": {
            "sId": 456
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/students/456"
      },
      "response": {
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student with sId 83641",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} exists but can not be deleted",
          "params": {
            "sId": 83641
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/students/83641"
      },
      "response": {
        "status": 409
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/123"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student with an invalid id",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/-1000"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "sId": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors.sId[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          }
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student with id 1",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} exists",
          "params": {
            "GPA": 3,
            "name": "Mocky",
            "sId": 1
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/1"
      },
      "response": {
        "body": {
          "content": {
            "GPA": 3,
            "name": "Mocky",
            "sId": 1
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student with id 1234",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} exists",
          "params": {
            "GPA": 3.81,
            "name": "Mocky McMockName",
            "sId": 1234
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/1234"
      },
      "response": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky McMockName",
            "sId": 1234
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student with id 404",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} does not exist",
          "params": {
            "sId": 404
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/404"
      },
      "response": {
        "body": {
          "content": {
            "status": 404,
            "title": "error title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json"
          ]
        },
        "matchingRules": {
          "body": {
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          }
        },
        "status": 404
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student with id 4567",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} exists",
          "params": {
            "GPA": null,
            "name": "Mocky McMockName",
            "sId": 4567
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/4567"
      },
      "response": {
        "body": {
          "content": {
            "GPA": null,
            "name": "Mocky McMockName",
            "sId": 4567
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student with rest response",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/123"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get all students",
      "pending": false,
      "providerStates": [
        {
          "name": "no students exist"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/"
      },
      "response": {
        "status": 404
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get all students",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": [
            {
              "GPA": 3.99,
              "name": "Test student 1",
              "sId": 1
            },
            {
              "GPA": 3.89,
              "name": "Test student 2",
              "sId": 2
            },
            {
              "GPA": 3.79,
              "name": "Test student 3",
              "sId": 3
            }
          ],
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get health 1",
      "pending": false,
      "providerStates": [
        {
          "name": "the api is healthy"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/health"
      },
      "response": {
        "body": {
          "content": {
            "entries": {
              "sql": {
                "data": {},
                "duration": "00:00:00.0856835",
                "status": "Healthy",
                "tags": []
              }
            },
            "status": "Healthy",
            "totalDuration": "00:00:00.0858619"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json"
          ]
        },
        "matchingRules": {
          "body": {
            "$.entries.sql.duration": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.entries.sql.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.totalDuration": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get health 2",
      "pending": false,
      "providerStates": [
        {
          "name": "the api is unhealthy"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/health"
      },
      "response": {
        "body": {
          "content": {
            "entries": {
              "sql": {
                "data": {},
                "description": "A connection was successfully established with the server, but then an error occurred during the pre-login handshake.",
                "duration": "00:00:00.0856835",
                "exception": "A connection was successfully established with the server, but then an error occurred during the pre-login handshake.",
                "status": "Unhealthy",
                "tags": []
              }
            },
            "status": "Unhealthy",
            "totalDuration": "00:00:00.0858619"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json"
          ]
        },
        "matchingRules": {
          "body": {
            "$.entries.sql.description": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.entries.sql.duration": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.entries.sql.exception": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.entries.sql.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.totalDuration": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 503
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get students",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get students with query",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get students with query rest response",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get students with rest response",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to patch a non-existant student with sId 4567",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} does not exist"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky Mockson"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PATCH",
        "path": "/students/4567"
      },
      "response": {
        "status": 404
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to patch a student",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "body": {
          "content": {
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "method": "PATCH",
        "path": "/students/123"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to patch a student with rest response",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "body": {
          "content": {
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "method": "PATCH",
        "path": "/students/123"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to patch a student with sId 123",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} exists",
          "params": {
            "GPA": 3.91,
            "name": "EXISTING STUDENT NAME",
            "sId": 123
          }
        },
        {
          "name": "a student with sId {sId} will be updated",
          "params": {
            "GPA": 3.91,
            "name": "Mocky",
            "sId": 123
          }
        }
      ],
      "request": {
        "body": {
          "content": {
            "name": "Mocky"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PATCH",
        "path": "/students/123"
      },
      "response": {
        "body": {
          "content": {
            "GPA": 3.91,
            "name": "Mocky",
            "sId": 123
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to patch a student with sId 456",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} exists",
          "params": {
            "GPA": 3.91,
            "name": "EXISTING STUDENT NAME",
            "sId": 456
          }
        },
        {
          "name": "a student with sId {sId} will be updated",
          "params": {
            "GPA": 3.52,
            "name": "EXISTING STUDENT NAME",
            "sId": 456
          }
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.52
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PATCH",
        "path": "/students/456"
      },
      "response": {
        "body": {
          "content": {
            "GPA": 3.52,
            "name": "EXISTING STUDENT NAME",
            "sId": 456
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to query students by name and GPA",
      "pending": false,
      "providerStates": [
        {
          "name": "no students exist for querying"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "status": 404
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a non-existant student with sId 4567 and invalid name",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} does not exist"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky Mockson"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/4567"
      },
      "response": {
        "body": {
          "content": false,
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 404
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "method": "PUT",
        "path": "/students/123"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student with rest response",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "method": "PUT",
        "path": "/students/123"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student with sId 123",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} exists and will be updated",
          "params": {
            "GPA": 3.81,
            "name": "Mocky",
            "sId": 123
          }
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/123"
      },
      "response": {
        "body": {
          "content": true,
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student with sId 4567",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sId} exists and will be updated",
          "params": {
            "GPA": null,
            "name": "Mocky",
            "sId": 4567
          }
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": "Mocky"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/4567"
      },
      "response": {
        "body": {
          "content": true,
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by name and GPA: Test Student, {\"GPA\":null} Test Case 2",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "gpaQuery": {
              "GPA": null
            },
            "name": "Test Student"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "body": {
          "content": [
            {
              "GPA": 3.99,
              "name": "Test student 1",
              "sId": 1
            },
            {
              "GPA": 3.89,
              "name": "Test student 2",
              "sId": 2
            },
            {
              "GPA": 3.79,
              "name": "Test student 3",
              "sId": 3
            }
          ],
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by name and GPA: Test Student, {\"GPA\":{\"isNull\":false,\"lt\":null,\"gt\":null,\"eq\":null}} Test Case 10",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "gpaQuery": {
              "GPA": {
                "eq": null,
                "gt": null,
                "isNull": false,
                "lt": null
              }
            },
            "name": "Test Student"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.isNull": [
            "False"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "body": {
          "content": [
            {
              "GPA": 3.99,
              "name": "Test student 1",
              "sId": 1
            },
            {
              "GPA": 3.89,
              "name": "Test student 2",
              "sId": 2
            },
            {
              "GPA": 3.79,
              "name": "Test student 3",
              "sId": 3
            }
          ],
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by name and GPA: Test Student, {\"GPA\":{\"isNull\":null,\"lt\":4,\"gt\":2,\"eq\":null}} Test Case 4",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "gpaQuery": {
              "GPA": {
                "eq": null,
                "gt": 2,
                "isNull": null,
                "lt": 4
              }
            },
            "name": "Test Student"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.gt": [
            "2"
          ],
          "GPA.lt": [
            "4"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "body": {
          "content": [
            {
              "GPA": 3.99,
              "name": "Test student 1",
              "sId": 1
            },
            {
              "GPA": 3.89,
              "name": "Test student 2",
              "sId": 2
            },
            {
              "GPA": 3.79,
              "name": "Test student 3",
              "sId": 3
            }
          ],
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by name and GPA: Test Student, {\"GPA\":{\"isNull\":null,\"lt\":null,\"gt\":null,\"eq\":4}} Test Case 1",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "gpaQuery": {
              "GPA": {
                "eq": 4,
                "gt": null,
                "isNull": null,
                "lt": null
              }
            },
            "name": "Test Student"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "body": {
          "content": [
            {
              "GPA": 3.99,
              "name": "Test student 1",
              "sId": 1
            },
            {
              "GPA": 3.89,
              "name": "Test student 2",
              "sId": 2
            },
            {
              "GPA": 3.79,
              "name": "Test student 3",
              "sId": 3
            }
          ],
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by name and GPA: Test Student, {\"GPA\":{\"isNull\":true,\"lt\":null,\"gt\":null,\"eq\":null}} Test Case 8",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "gpaQuery": {
              "GPA": {
                "eq": null,
                "gt": null,
                "isNull": true,
                "lt": null
              }
            },
            "name": "Test Student"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.isNull": [
            "True"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "body": {
          "content": [
            {
              "GPA": 3.99,
              "name": "Test student 1",
              "sId": 1
            },
            {
              "GPA": 3.89,
              "name": "Test student 2",
              "sId": 2
            },
            {
              "GPA": 3.79,
              "name": "Test student 3",
              "sId": 3
            }
          ],
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by name and GPA: null, {\"GPA\":{\"isNull\":false,\"lt\":null,\"gt\":null,\"eq\":null}} Test Case 9",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "gpaQuery": {
              "GPA": {
                "eq": null,
                "gt": null,
                "isNull": false,
                "lt": null
              }
            },
            "name": null
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.isNull": [
            "False"
          ]
        }
      },
      "response": {
        "body": {
          "content": [
            {
              "GPA": 3.99,
              "name": "Test student 1",
              "sId": 1
            },
            {
              "GPA": 3.89,
              "name": "Test student 2",
              "sId": 2
            },
            {
              "GPA": 3.79,
              "name": "Test student 3",
              "sId": 3
            }
          ],
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by name and GPA: null, {\"GPA\":{\"isNull\":null,\"lt\":0.99,\"gt\":0,\"eq\":null}} Test Case 6",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "gpaQuery": {
              "GPA": {
                "eq": null,
                "gt": 0,
                "isNull": null,
                "lt": 0.99
              }
            },
            "name": null
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.gt": [
            "0"
          ],
          "GPA.lt": [
            "0.99"
          ]
        }
      },
      "response": {
        "body": {
          "content": [
            {
              "GPA": 3.99,
              "name": "Test student 1",
              "sId": 1
            },
            {
              "GPA": 3.89,
              "name": "Test student 2",
              "sId": 2
            },
            {
              "GPA": 3.79,
              "name": "Test student 3",
              "sId": 3
            }
          ],
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by name and GPA: null, {\"GPA\":{\"isNull\":null,\"lt\":2,\"gt\":4,\"eq\":null}} Test Case 5",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "gpaQuery": {
              "GPA": {
                "eq": null,
                "gt": 4,
                "isNull": null,
                "lt": 2
              }
            },
            "name": null
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.gt": [
            "4"
          ],
          "GPA.lt": [
            "2"
          ]
        }
      },
      "response": {
        "body": {
          "content": [
            {
              "GPA": 3.99,
              "name": "Test student 1",
              "sId": 1
            },
            {
              "GPA": 3.89,
              "name": "Test student 2",
              "sId": 2
            },
            {
              "GPA": 3.79,
              "name": "Test student 3",
              "sId": 3
            }
          ],
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by name and GPA: null, {\"GPA\":{\"isNull\":null,\"lt\":null,\"gt\":null,\"eq\":4}} Test Case 3",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "gpaQuery": {
              "GPA": {
                "eq": 4,
                "gt": null,
                "isNull": null,
                "lt": null
              }
            },
            "name": null
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ]
        }
      },
      "response": {
        "body": {
          "content": [
            {
              "GPA": 3.99,
              "name": "Test student 1",
              "sId": 1
            },
            {
              "GPA": 3.89,
              "name": "Test student 2",
              "sId": 2
            },
            {
              "GPA": 3.79,
              "name": "Test student 3",
              "sId": 3
            }
          ],
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by name and GPA: null, {\"GPA\":{\"isNull\":true,\"lt\":null,\"gt\":null,\"eq\":null}} Test Case 7",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "gpaQuery": {
              "GPA": {
                "eq": null,
                "gt": null,
                "isNull": true,
                "lt": null
              }
            },
            "name": null
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.isNull": [
            "True"
          ]
        }
      },
      "response": {
        "body": {
          "content": [
            {
              "GPA": 3.99,
              "name": "Test student 1",
              "sId": 1
            },
            {
              "GPA": 3.89,
              "name": "Test student 2",
              "sId": 2
            },
            {
              "GPA": 3.79,
              "name": "Test student 3",
              "sId": 3
            }
          ],
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with sort order , Test Case 3",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "gpaQuery": {
              "GPA": {
                "eq": 4,
                "gt": null,
                "isNull": null,
                "lt": null
              }
            },
            "name": "Test Student",
            "orderBy": null
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "body": {
          "content": [
            {
              "GPA": 3.99,
              "name": "Test student 1",
              "sId": 1
            },
            {
              "GPA": 3.89,
              "name": "Test student 2",
              "sId": 2
            },
            {
              "GPA": 3.79,
              "name": "Test student 3",
              "sId": 3
            }
          ],
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with sort order ASC, Test Case 1",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "gpaQuery": {
              "GPA": {
                "eq": 4,
                "gt": null,
                "isNull": null,
                "lt": null
              }
            },
            "name": "Test Student",
            "orderBy": "ASC"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "name": [
            "Test Student"
          ],
          "orderBy": [
            "ASC"
          ]
        }
      },
      "response": {
        "body": {
          "content": [
            {
              "GPA": 3.99,
              "name": "Test student 1",
              "sId": 1
            },
            {
              "GPA": 3.89,
              "name": "Test student 2",
              "sId": 2
            },
            {
              "GPA": 3.79,
              "name": "Test student 3",
              "sId": 3
            }
          ],
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with sort order DESC, Test Case 2",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "gpaQuery": {
              "GPA": {
                "eq": 4,
                "gt": null,
                "isNull": null,
                "lt": null
              }
            },
            "name": "Test Student",
            "orderBy": "DESC"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "name": [
            "Test Student"
          ],
          "orderBy": [
            "DESC"
          ]
        }
      },
      "response": {
        "body": {
          "content": [
            {
              "GPA": 3.99,
              "name": "Test student 1",
              "sId": 1
            },
            {
              "GPA": 3.89,
              "name": "Test student 2",
              "sId": 2
            },
            {
              "GPA": 3.79,
              "name": "Test student 3",
              "sId": 3
            }
          ],
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "an invalid request to add a new student 1",
      "pending": false,
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": null
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "name": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.name[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "an invalid request to add a new student 2",
      "pending": false,
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": ""
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "name": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.name[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "an invalid request to add a new student 3",
      "pending": false,
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": "  \t\r\n   "
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "name": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.name[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "an invalid request to add a new student 4",
      "pending": false,
      "request": {
        "body": {
          "content": {
            "GPA": -4,
            "name": "Test Student Bad GPA"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "GPA": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.GPA[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "an invalid request to add a new student 5",
      "pending": false,
      "request": {
        "body": {
          "content": {
            "GPA": 2.222,
            "name": "Test Student Bad GPA"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "GPA": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.GPA[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    }
  ],
  "metadata": {
    "pactRust": {
      "ffi": "0.4.16",
      "models": "1.1.19"
    },
    "pactSpecification": {
      "version": "4.0"
    }
  },
  "provider": {
    "name": "SchoolDemoApi"
  }
}