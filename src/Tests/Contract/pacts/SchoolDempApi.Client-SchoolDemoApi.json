{
  "consumer": {
    "name": "SchoolDempApi.Client"
  },
  "interactions": [
    {
      "description": "a request to add a student",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to add a student with rest response",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/students/123"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student with rest response",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/students/123"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/123"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student with rest response",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/123"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get health 1",
      "pending": false,
      "providerStates": [
        {
          "name": "the api is healthy"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/health"
      },
      "response": {
        "body": {
          "content": {
            "entries": {
              "sql": {
                "data": {},
                "duration": "00:00:00.0856835",
                "status": "Healthy",
                "tags": []
              }
            },
            "status": "Healthy",
            "totalDuration": "00:00:00.0858619"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json"
          ]
        },
        "matchingRules": {
          "body": {
            "$.entries.sql.duration": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.entries.sql.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.totalDuration": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get health 2",
      "pending": false,
      "providerStates": [
        {
          "name": "the api is unhealthy"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/health"
      },
      "response": {
        "body": {
          "content": {
            "entries": {
              "sql": {
                "data": {},
                "description": "A connection was successfully established with the server, but then an error occurred during the pre-login handshake.",
                "duration": "00:00:00.0856835",
                "exception": "A connection was successfully established with the server, but then an error occurred during the pre-login handshake.",
                "status": "Unhealthy",
                "tags": []
              }
            },
            "status": "Unhealthy",
            "totalDuration": "00:00:00.0858619"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json"
          ]
        },
        "matchingRules": {
          "body": {
            "$.entries.sql.description": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.entries.sql.duration": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.entries.sql.exception": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.entries.sql.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.totalDuration": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 503
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get students",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get students with query",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get students with query rest response",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get students with rest response",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to patch a student",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "body": {
          "content": {
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "method": "PATCH",
        "path": "/students/123"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to patch a student with rest response",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "body": {
          "content": {
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "method": "PATCH",
        "path": "/students/123"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "method": "PUT",
        "path": "/students/123"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student with rest response",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "method": "PUT",
        "path": "/students/123"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    }
  ],
  "metadata": {
    "pactRust": {
      "ffi": "0.4.16",
      "models": "1.1.19"
    },
    "pactSpecification": {
      "version": "4.0"
    }
  },
  "provider": {
    "name": "SchoolDemoApi"
  }
}