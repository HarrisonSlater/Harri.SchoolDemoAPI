{
  "consumer": {
    "name": "SchoolDemoApi.Client"
  },
  "interactions": [
    {
      "description": "a bad paged request to query students with page -1 and page size -10, Test Case 1",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "page": [
            "-1"
          ],
          "pageSize": [
            "-10"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad paged request to query students with page -1 and page size 10, Test Case 2",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "page": [
            "-1"
          ],
          "pageSize": [
            "10"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad paged request to query students with page 0 and page size 10, Test Case 6",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "page": [
            "0"
          ],
          "pageSize": [
            "10"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad paged request to query students with page 1 and page size -10, Test Case 3",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "page": [
            "1"
          ],
          "pageSize": [
            "-10"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad paged request to query students with page 1 and page size asdf, Test Case 5",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "page": [
            "1"
          ],
          "pageSize": [
            "asdf"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad paged request to query students with page asdf and page size 10, Test Case 4",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "page": [
            "asdf"
          ],
          "pageSize": [
            "10"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to patch a student with sId",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be updated"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.811,
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ],
          "If-Match": [
            "AAADBAUGB/8="
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PATCH",
        "path": "/students/1011"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "GPA": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors.GPA[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to query students by sId: -1, Test Case 1",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "sId": [
            "-1"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to query students by sId: -1000, Test Case 3",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "sId": [
            "-1000"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to query students by sId: 0, Test Case 2",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "sId": [
            "0"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to query students with sort column 2, Test Case 3",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "sortColumn": [
            "2"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to query students with sort column DSC, Test Case 2",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "sortColumn": [
            "DSC"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to query students with sort column asdf, Test Case 1",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "sortColumn": [
            "asdf"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to query students with sort order 2, Test Case 3",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "orderBy": [
            "2"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to query students with sort order DSC, Test Case 2",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "orderBy": [
            "DSC"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to query students with sort order asdf, Test Case 1",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "orderBy": [
            "asdf"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to query students with sort order null, Test Case 4",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "orderBy": [
            "null"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to query students: Test Student, {\"GPA\":{\"isNull\":false,\"lt\":null,\"gt\":4,\"eq\":null}} Test Case 6",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.gt": [
            "4"
          ],
          "GPA.isNull": [
            "False"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to query students: Test Student, {\"GPA\":{\"isNull\":null,\"lt\":4,\"gt\":null,\"eq\":4}} Test Case 2",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "GPA.lt": [
            "4"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to query students: Test Student, {\"GPA\":{\"isNull\":null,\"lt\":null,\"gt\":4,\"eq\":4}} Test Case 1",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "GPA.gt": [
            "4"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to query students: Test Student, {\"GPA\":{\"isNull\":null,\"lt\":null,\"gt\":null,\"eq\":-1}} Test Case 3",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "-1"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to query students: Test Student, {\"GPA\":{\"isNull\":null,\"lt\":null,\"gt\":null,\"eq\":0}} Test Case 4",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "0"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to query students: Test Student, {\"GPA\":{\"isNull\":true,\"lt\":null,\"gt\":null,\"eq\":4}} Test Case 5",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "GPA.isNull": [
            "True"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to update a student with sId 1",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be updated"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": null
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/1234"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "name": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.name[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to update a student with sId 2",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be updated"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": ""
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/4567"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "name": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.name[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to update a student with sId 3",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be updated"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": -2,
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/4567"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "GPA": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.GPA[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to update a student with sId 4",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be updated"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.811,
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/4567"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "GPA": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.GPA[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a paged request to query students with out of bounds page 2 and page size 3",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": null
              },
              "name": null,
              "orderBy": null,
              "page": 2,
              "pageSize": 3,
              "sId": null,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "page": [
            "2"
          ],
          "pageSize": [
            "3"
          ]
        }
      },
      "response": {
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to add a new student with name Mocky",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sIdNew} will be created",
          "params": {
            "sIdNew": 4567,
            "stateObject": {
              "GPA": null,
              "name": "Mocky"
            },
            "stateObjectType": "NewStudentDto"
          }
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": "Mocky"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": 4567,
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to add a new student with name Mocky McMockName",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sIdNew} will be created",
          "params": {
            "sIdNew": 1234,
            "stateObject": {
              "GPA": 3.81,
              "name": "Mocky McMockName"
            },
            "stateObjectType": "NewStudentDto"
          }
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky McMockName"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": 1234,
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to add a student",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to add a student with rest response",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/students/123"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student with invalid sId -1234",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be deleted"
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/students/-1234"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "sId": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors.sId[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student with rest response",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/students/123"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student with sId",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists but can not be deleted",
          "params": {
            "stateObject": 83641,
            "stateObjectType": "Int32"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/students/83641"
      },
      "response": {
        "status": 409
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student with sId",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists and will be deleted",
          "params": {
            "stateObject": 456,
            "stateObjectType": "Int32"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/students/456"
      },
      "response": {
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student with sId",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists and will be deleted",
          "params": {
            "stateObject": 123,
            "stateObjectType": "Int32"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/students/123"
      },
      "response": {
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student with sId",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId does not exist and will not be deleted",
          "params": {
            "stateObject": 1122,
            "stateObjectType": "Int32"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/students/1122"
      },
      "response": {
        "status": 404
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/123"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student with an invalid id",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/-1000"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "sId": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors.sId[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          }
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student with id 1",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists",
          "params": {
            "stateObject": {
              "GPA": 3,
              "name": "Mocky",
              "sId": 1
            },
            "stateObjectType": "StudentDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/1"
      },
      "response": {
        "body": {
          "content": {
            "GPA": 3,
            "name": "Mocky",
            "sId": 1
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ],
          "ETag": [
            "AAADBAUGB/8="
          ]
        },
        "matchingRules": {
          "body": {
            "$.GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student with id 1234",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists",
          "params": {
            "stateObject": {
              "GPA": 3.81,
              "name": "Mocky McMockName",
              "sId": 1234
            },
            "stateObjectType": "StudentDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/1234"
      },
      "response": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky McMockName",
            "sId": 1234
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ],
          "ETag": [
            "AAADBAUGB/8="
          ]
        },
        "matchingRules": {
          "body": {
            "$.GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student with id 404",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId does not exist"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/404"
      },
      "response": {
        "body": {
          "content": {
            "status": 404,
            "title": "error title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json"
          ]
        },
        "matchingRules": {
          "body": {
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          }
        },
        "status": 404
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student with id 4567",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists",
          "params": {
            "stateObject": {
              "GPA": null,
              "name": "Mocky McMockName",
              "sId": 4567
            },
            "stateObjectType": "StudentDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/4567"
      },
      "response": {
        "body": {
          "content": {
            "GPA": null,
            "name": "Mocky McMockName",
            "sId": 4567
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ],
          "ETag": [
            "AAADBAUGB/8="
          ]
        },
        "matchingRules": {
          "body": {
            "$.GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student with rest response",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/123"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get all students",
      "pending": false,
      "providerStates": [
        {
          "name": "no students exist"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/"
      },
      "response": {
        "status": 204
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get all students",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get health 1",
      "pending": false,
      "providerStates": [
        {
          "name": "the api is healthy"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/health"
      },
      "response": {
        "body": {
          "content": {
            "entries": {
              "sql": {
                "data": {},
                "duration": "00:00:00.0856835",
                "status": "Healthy",
                "tags": []
              }
            },
            "status": "Healthy",
            "totalDuration": "00:00:00.0858619"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json"
          ]
        },
        "matchingRules": {
          "body": {
            "$.entries.sql.duration": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.entries.sql.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.totalDuration": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get health 2",
      "pending": false,
      "providerStates": [
        {
          "name": "the api is unhealthy"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/health"
      },
      "response": {
        "body": {
          "content": {
            "entries": {
              "sql": {
                "data": {},
                "description": "A connection was successfully established with the server, but then an error occurred during the pre-login handshake.",
                "duration": "00:00:00.0856835",
                "exception": "A connection was successfully established with the server, but then an error occurred during the pre-login handshake.",
                "status": "Unhealthy",
                "tags": []
              }
            },
            "status": "Unhealthy",
            "totalDuration": "00:00:00.0858619"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json"
          ]
        },
        "matchingRules": {
          "body": {
            "$.entries.sql.description": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.entries.sql.duration": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.entries.sql.exception": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.entries.sql.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.totalDuration": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 503
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get students",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get students with query",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get students with query rest response",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get students with rest response",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to patch a student with sId",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId will be patched",
          "params": {
            "sId": 123,
            "stateObject": {
              "GPA": 3.81,
              "name": "Mocky McMockName"
            },
            "stateObjectType": "StudentPatchDto"
          }
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky McMockName"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ],
          "If-Match": [
            "AAADBAUGB/8="
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PATCH",
        "path": "/students/123"
      },
      "response": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky McMockName",
            "sId": 123
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to patch a student with sId 4567",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists but our request is missing an If-Match header"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky Mockson"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PATCH",
        "path": "/students/4567"
      },
      "response": {
        "status": 428
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to patch a student with sId 4567",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists but was updated before us"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky Mockson"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ],
          "If-Match": [
            "AAADBAUGB/8="
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PATCH",
        "path": "/students/4567"
      },
      "response": {
        "status": 412
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to patch a student with sId 4567",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists but a race condition occurs at the database level"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky Mockson"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ],
          "If-Match": [
            "AAADBAUGB/8="
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PATCH",
        "path": "/students/4567"
      },
      "response": {
        "status": 409
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to patch a student with sId 4567",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId does not exist"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky Mockson"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ],
          "If-Match": [
            "AAADBAUGB/8="
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PATCH",
        "path": "/students/4567"
      },
      "response": {
        "status": 404
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to query students by name and GPA",
      "pending": false,
      "providerStates": [
        {
          "name": "no students exist for querying"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "status": 204
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ],
          "If-Match": [
            "AAADBAUGB/8="
          ]
        },
        "method": "PUT",
        "path": "/students/123"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student with rest response",
      "pending": false,
      "providerStates": [
        {
          "name": "the api returns a 500 internal server error"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ],
          "If-Match": [
            "AAADBAUGB/8="
          ]
        },
        "method": "PUT",
        "path": "/students/123"
      },
      "response": {
        "status": 500
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student with sId",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists and will be updated",
          "params": {
            "sId": 123,
            "stateObject": {
              "GPA": 3.81,
              "name": "Mocky"
            },
            "stateObjectType": "UpdateStudentDto"
          }
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ],
          "If-Match": [
            "AAADBAUGB/8="
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/123"
      },
      "response": {
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student with sId",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists and will be updated",
          "params": {
            "sId": 4567,
            "stateObject": {
              "GPA": null,
              "name": "Mocky"
            },
            "stateObjectType": "UpdateStudentDto"
          }
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": "Mocky"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ],
          "If-Match": [
            "AAADBAUGB/8="
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/4567"
      },
      "response": {
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student with sId 4567",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists but our request is missing an If-Match header"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky Mockson"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/4567"
      },
      "response": {
        "status": 428
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student with sId 4567",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists but was updated before us"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky Mockson"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ],
          "If-Match": [
            "AAADBAUGB/8="
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/4567"
      },
      "response": {
        "status": 412
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student with sId 4567",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists but a race condition occurs at the database level"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky Mockson"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ],
          "If-Match": [
            "AAADBAUGB/8="
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/4567"
      },
      "response": {
        "status": 409
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student with sId 4567",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId does not exist"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky Mockson"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ],
          "If-Match": [
            "AAADBAUGB/8="
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/4567"
      },
      "response": {
        "status": 404
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by name and GPA: , {\"GPA\":{\"isNull\":false,\"lt\":null,\"gt\":null,\"eq\":null}} Test Case 9",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": null,
                  "gt": null,
                  "isNull": false,
                  "lt": null
                }
              },
              "name": null,
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.isNull": [
            "False"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by name and GPA: , {\"GPA\":{\"isNull\":null,\"lt\":0.99,\"gt\":0,\"eq\":null}} Test Case 6",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": null,
                  "gt": 0,
                  "isNull": null,
                  "lt": 0.99
                }
              },
              "name": null,
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.gt": [
            "0"
          ],
          "GPA.lt": [
            "0.99"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by name and GPA: , {\"GPA\":{\"isNull\":null,\"lt\":2,\"gt\":4,\"eq\":null}} Test Case 5",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": null,
                  "gt": 4,
                  "isNull": null,
                  "lt": 2
                }
              },
              "name": null,
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.gt": [
            "4"
          ],
          "GPA.lt": [
            "2"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by name and GPA: , {\"GPA\":{\"isNull\":null,\"lt\":null,\"gt\":null,\"eq\":4}} Test Case 3",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": 4,
                  "gt": null,
                  "isNull": null,
                  "lt": null
                }
              },
              "name": null,
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by name and GPA: , {\"GPA\":{\"isNull\":true,\"lt\":null,\"gt\":null,\"eq\":null}} Test Case 7",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": null,
                  "gt": null,
                  "isNull": true,
                  "lt": null
                }
              },
              "name": null,
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.isNull": [
            "True"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by name and GPA: Test Student, {\"GPA\":null} Test Case 2",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": null
              },
              "name": "Test Student",
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by name and GPA: Test Student, {\"GPA\":{\"isNull\":false,\"lt\":null,\"gt\":null,\"eq\":null}} Test Case 10",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": null,
                  "gt": null,
                  "isNull": false,
                  "lt": null
                }
              },
              "name": "Test Student",
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.isNull": [
            "False"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by name and GPA: Test Student, {\"GPA\":{\"isNull\":null,\"lt\":4,\"gt\":2,\"eq\":null}} Test Case 4",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": null,
                  "gt": 2,
                  "isNull": null,
                  "lt": 4
                }
              },
              "name": "Test Student",
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.gt": [
            "2"
          ],
          "GPA.lt": [
            "4"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by name and GPA: Test Student, {\"GPA\":{\"isNull\":null,\"lt\":null,\"gt\":null,\"eq\":4}} Test Case 1",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": 4,
                  "gt": null,
                  "isNull": null,
                  "lt": null
                }
              },
              "name": "Test Student",
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by name and GPA: Test Student, {\"GPA\":{\"isNull\":true,\"lt\":null,\"gt\":null,\"eq\":null}} Test Case 8",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": null,
                  "gt": null,
                  "isNull": true,
                  "lt": null
                }
              },
              "name": "Test Student",
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.isNull": [
            "True"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by sId, name and GPA: 1234, , {\"GPA\":{\"isNull\":false,\"lt\":null,\"gt\":null,\"eq\":null}} Test Case 9",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": null,
                  "gt": null,
                  "isNull": false,
                  "lt": null
                }
              },
              "name": null,
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": 1234,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.isNull": [
            "False"
          ],
          "sId": [
            "1234"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by sId, name and GPA: 1234, , {\"GPA\":{\"isNull\":null,\"lt\":0.99,\"gt\":0,\"eq\":null}} Test Case 6",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": null,
                  "gt": 0,
                  "isNull": null,
                  "lt": 0.99
                }
              },
              "name": null,
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": 1234,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.gt": [
            "0"
          ],
          "GPA.lt": [
            "0.99"
          ],
          "sId": [
            "1234"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by sId, name and GPA: 1234, , {\"GPA\":{\"isNull\":null,\"lt\":2,\"gt\":4,\"eq\":null}} Test Case 5",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": null,
                  "gt": 4,
                  "isNull": null,
                  "lt": 2
                }
              },
              "name": null,
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": 1234,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.gt": [
            "4"
          ],
          "GPA.lt": [
            "2"
          ],
          "sId": [
            "1234"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by sId, name and GPA: 1234, , {\"GPA\":{\"isNull\":null,\"lt\":null,\"gt\":null,\"eq\":4}} Test Case 3",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": 4,
                  "gt": null,
                  "isNull": null,
                  "lt": null
                }
              },
              "name": null,
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": 1234,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "sId": [
            "1234"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by sId, name and GPA: 1234, , {\"GPA\":{\"isNull\":true,\"lt\":null,\"gt\":null,\"eq\":null}} Test Case 7",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": null,
                  "gt": null,
                  "isNull": true,
                  "lt": null
                }
              },
              "name": null,
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": 1234,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.isNull": [
            "True"
          ],
          "sId": [
            "1234"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by sId, name and GPA: 1234, Test Student, {\"GPA\":null} Test Case 2",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": null
              },
              "name": "Test Student",
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": 1234,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "name": [
            "Test Student"
          ],
          "sId": [
            "1234"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by sId, name and GPA: 1234, Test Student, {\"GPA\":{\"isNull\":false,\"lt\":null,\"gt\":null,\"eq\":null}} Test Case 10",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": null,
                  "gt": null,
                  "isNull": false,
                  "lt": null
                }
              },
              "name": "Test Student",
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": 1234,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.isNull": [
            "False"
          ],
          "name": [
            "Test Student"
          ],
          "sId": [
            "1234"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by sId, name and GPA: 1234, Test Student, {\"GPA\":{\"isNull\":null,\"lt\":4,\"gt\":2,\"eq\":null}} Test Case 4",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": null,
                  "gt": 2,
                  "isNull": null,
                  "lt": 4
                }
              },
              "name": "Test Student",
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": 1234,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.gt": [
            "2"
          ],
          "GPA.lt": [
            "4"
          ],
          "name": [
            "Test Student"
          ],
          "sId": [
            "1234"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by sId, name and GPA: 1234, Test Student, {\"GPA\":{\"isNull\":null,\"lt\":null,\"gt\":null,\"eq\":4}} Test Case 1",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": 4,
                  "gt": null,
                  "isNull": null,
                  "lt": null
                }
              },
              "name": "Test Student",
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": 1234,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "name": [
            "Test Student"
          ],
          "sId": [
            "1234"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students by sId, name and GPA: 1234, Test Student, {\"GPA\":{\"isNull\":true,\"lt\":null,\"gt\":null,\"eq\":null}} Test Case 8",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": null,
                  "gt": null,
                  "isNull": true,
                  "lt": null
                }
              },
              "name": "Test Student",
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": 1234,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.isNull": [
            "True"
          ],
          "name": [
            "Test Student"
          ],
          "sId": [
            "1234"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with all parameters set",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": 4,
                  "gt": null,
                  "isNull": null,
                  "lt": null
                }
              },
              "name": "Test Student",
              "orderBy": 0,
              "page": 1,
              "pageSize": 3,
              "sId": 1023,
              "sortColumn": "GPA"
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "name": [
            "Test Student"
          ],
          "orderBy": [
            "ASC"
          ],
          "page": [
            "1"
          ],
          "pageSize": [
            "3"
          ],
          "sId": [
            "1023"
          ],
          "sortColumn": [
            "GPA"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with all parameters set",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": 4,
                  "gt": null,
                  "isNull": null,
                  "lt": null
                }
              },
              "name": "Test Student",
              "orderBy": 0,
              "page": null,
              "pageSize": null,
              "sId": 1023,
              "sortColumn": "GPA"
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "name": [
            "Test Student"
          ],
          "orderBy": [
            "ASC"
          ],
          "sId": [
            "1023"
          ],
          "sortColumn": [
            "GPA"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with case insensitive sort order Asc, Test Case 2",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": null
              },
              "name": null,
              "orderBy": 0,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "orderBy": [
            "Asc"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with case insensitive sort order Desc, Test Case 4",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": null
              },
              "name": null,
              "orderBy": 1,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "orderBy": [
            "Desc"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with case insensitive sort order asc, Test Case 1",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": null
              },
              "name": null,
              "orderBy": 0,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "orderBy": [
            "asc"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with case insensitive sort order desc, Test Case 3",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": null
              },
              "name": null,
              "orderBy": 1,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "orderBy": [
            "desc"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with page  and page size , Test Case 2",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying across multiple pages",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": null
              },
              "name": null,
              "orderBy": null,
              "page": 1,
              "pageSize": 10,
              "sId": null,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 2.99,
                "name": "Test student 4",
                "sId": 4
              },
              {
                "GPA": 2.89,
                "name": "Test student 5",
                "sId": 5
              },
              {
                "GPA": 2.79,
                "name": "Test student 6",
                "sId": 6
              }
            ],
            "page": 2,
            "pageSize": 3,
            "totalCount": 9
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with page  and page size 100, Test Case 5",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying across multiple pages",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": null
              },
              "name": null,
              "orderBy": null,
              "page": 1,
              "pageSize": 100,
              "sId": null,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "pageSize": [
            "100"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 2.99,
                "name": "Test student 4",
                "sId": 4
              },
              {
                "GPA": 2.89,
                "name": "Test student 5",
                "sId": 5
              },
              {
                "GPA": 2.79,
                "name": "Test student 6",
                "sId": 6
              }
            ],
            "page": 2,
            "pageSize": 3,
            "totalCount": 9
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with page 2 and page size , Test Case 4",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying across multiple pages",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": null
              },
              "name": null,
              "orderBy": null,
              "page": 2,
              "pageSize": 10,
              "sId": null,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "page": [
            "2"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 2.99,
                "name": "Test student 4",
                "sId": 4
              },
              {
                "GPA": 2.89,
                "name": "Test student 5",
                "sId": 5
              },
              {
                "GPA": 2.79,
                "name": "Test student 6",
                "sId": 6
              }
            ],
            "page": 2,
            "pageSize": 3,
            "totalCount": 9
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with page 2 and page size 10, Test Case 1",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying across multiple pages",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": null
              },
              "name": null,
              "orderBy": null,
              "page": 2,
              "pageSize": 10,
              "sId": null,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "page": [
            "2"
          ],
          "pageSize": [
            "10"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 2.99,
                "name": "Test student 4",
                "sId": 4
              },
              {
                "GPA": 2.89,
                "name": "Test student 5",
                "sId": 5
              },
              {
                "GPA": 2.79,
                "name": "Test student 6",
                "sId": 6
              }
            ],
            "page": 2,
            "pageSize": 3,
            "totalCount": 9
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with page 2 and page size 2, Test Case 3",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying across multiple pages",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": null
              },
              "name": null,
              "orderBy": null,
              "page": 2,
              "pageSize": 2,
              "sId": null,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "page": [
            "2"
          ],
          "pageSize": [
            "2"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 2.99,
                "name": "Test student 4",
                "sId": 4
              },
              {
                "GPA": 2.89,
                "name": "Test student 5",
                "sId": 5
              },
              {
                "GPA": 2.79,
                "name": "Test student 6",
                "sId": 6
              }
            ],
            "page": 2,
            "pageSize": 3,
            "totalCount": 9
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with sort column , Test Case 4",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": 4,
                  "gt": null,
                  "isNull": null,
                  "lt": null
                }
              },
              "name": "Test Student",
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with sort column , Test Case 5",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": 4,
                  "gt": null,
                  "isNull": null,
                  "lt": null
                }
              },
              "name": "Test Student",
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": ""
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "name": [
            "Test Student"
          ],
          "sortColumn": [
            ""
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with sort column GPA, Test Case 3",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": 4,
                  "gt": null,
                  "isNull": null,
                  "lt": null
                }
              },
              "name": "Test Student",
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": "GPA"
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "name": [
            "Test Student"
          ],
          "sortColumn": [
            "GPA"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with sort column Gpa, Test Case 9",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": 4,
                  "gt": null,
                  "isNull": null,
                  "lt": null
                }
              },
              "name": "Test Student",
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": "Gpa"
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "name": [
            "Test Student"
          ],
          "sortColumn": [
            "Gpa"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with sort column NAME, Test Case 8",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": 4,
                  "gt": null,
                  "isNull": null,
                  "lt": null
                }
              },
              "name": "Test Student",
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": "NAME"
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "name": [
            "Test Student"
          ],
          "sortColumn": [
            "NAME"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with sort column Name, Test Case 7",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": 4,
                  "gt": null,
                  "isNull": null,
                  "lt": null
                }
              },
              "name": "Test Student",
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": "Name"
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "name": [
            "Test Student"
          ],
          "sortColumn": [
            "Name"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with sort column gpa, Test Case 10",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": 4,
                  "gt": null,
                  "isNull": null,
                  "lt": null
                }
              },
              "name": "Test Student",
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": "gpa"
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "name": [
            "Test Student"
          ],
          "sortColumn": [
            "gpa"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with sort column name, Test Case 2",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": 4,
                  "gt": null,
                  "isNull": null,
                  "lt": null
                }
              },
              "name": "Test Student",
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": "name"
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "name": [
            "Test Student"
          ],
          "sortColumn": [
            "name"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with sort column sId, Test Case 1",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": 4,
                  "gt": null,
                  "isNull": null,
                  "lt": null
                }
              },
              "name": "Test Student",
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": "sId"
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "name": [
            "Test Student"
          ],
          "sortColumn": [
            "sId"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with sort column sid, Test Case 6",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": 4,
                  "gt": null,
                  "isNull": null,
                  "lt": null
                }
              },
              "name": "Test Student",
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": "sid"
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "name": [
            "Test Student"
          ],
          "sortColumn": [
            "sid"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with sort order , Test Case 3",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": 4,
                  "gt": null,
                  "isNull": null,
                  "lt": null
                }
              },
              "name": "Test Student",
              "orderBy": null,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "name": [
            "Test Student"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with sort order ASC, Test Case 1",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": 4,
                  "gt": null,
                  "isNull": null,
                  "lt": null
                }
              },
              "name": "Test Student",
              "orderBy": 0,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "name": [
            "Test Student"
          ],
          "orderBy": [
            "ASC"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a valid request to query students with sort order DESC, Test Case 2",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist for querying",
          "params": {
            "stateObject": {
              "gpaQuery": {
                "GPA": {
                  "eq": 4,
                  "gt": null,
                  "isNull": null,
                  "lt": null
                }
              },
              "name": "Test Student",
              "orderBy": 1,
              "page": null,
              "pageSize": null,
              "sId": null,
              "sortColumn": null
            },
            "stateObjectType": "GetStudentsQueryDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/",
        "query": {
          "GPA.eq": [
            "4"
          ],
          "name": [
            "Test Student"
          ],
          "orderBy": [
            "DESC"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "an invalid request to add a new student 1",
      "pending": false,
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": null
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "name": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.name[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "an invalid request to add a new student 2",
      "pending": false,
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": ""
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "name": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.name[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "an invalid request to add a new student 3",
      "pending": false,
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": "  \t\r\n   "
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "name": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.name[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "an invalid request to add a new student 4",
      "pending": false,
      "request": {
        "body": {
          "content": {
            "GPA": -4,
            "name": "Test Student Bad GPA"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "GPA": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.GPA[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "an invalid request to add a new student 5",
      "pending": false,
      "request": {
        "body": {
          "content": {
            "GPA": 2.222,
            "name": "Test Student Bad GPA"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "GPA": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.GPA[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    }
  ],
  "metadata": {
    "pactRust": {
      "ffi": "0.4.16",
      "models": "1.1.19"
    },
    "pactSpecification": {
      "version": "4.0"
    }
  },
  "provider": {
    "name": "SchoolDemoApi"
  }
}