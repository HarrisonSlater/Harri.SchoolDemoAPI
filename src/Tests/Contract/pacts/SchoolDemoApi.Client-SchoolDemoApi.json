{
  "consumer": {
    "name": "SchoolDemoApi.Client"
  },
  "interactions": [
    {
      "description": "a bad request to patch a student with sId",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be updated"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.811,
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PATCH",
        "path": "/students/1011"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "GPA": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors.GPA[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to update a student with sId 1",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be updated"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": null
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/1234"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "name": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.name[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to update a student with sId 2",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be updated"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": ""
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/4567"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "name": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.name[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to update a student with sId 3",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be updated"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": -2,
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/4567"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "GPA": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.GPA[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a bad request to update a student with sId 4",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be updated"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.811,
            "name": "Test Student"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/4567"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "GPA": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.GPA[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to add a new student with name Mocky",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sIdNew} will be created",
          "params": {
            "sIdNew": 4567,
            "stateObject": {
              "GPA": null,
              "name": "Mocky"
            },
            "stateObjectType": "NewStudentDto"
          }
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": "Mocky"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": 4567,
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to add a new student with name Mocky McMockName",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId {sIdNew} will be created",
          "params": {
            "sIdNew": 1234,
            "stateObject": {
              "GPA": 3.81,
              "name": "Mocky McMockName"
            },
            "stateObjectType": "NewStudentDto"
          }
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky McMockName"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": 1234,
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student with invalid sId -1234",
      "pending": false,
      "providerStates": [
        {
          "name": "no student will be deleted"
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/students/-1234"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "sId": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors.sId[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student with sId",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists but can not be deleted",
          "params": {
            "stateObject": 83641,
            "stateObjectType": "Int32"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/students/83641"
      },
      "response": {
        "status": 409
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student with sId",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists and will be deleted",
          "params": {
            "stateObject": 456,
            "stateObjectType": "Int32"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/students/456"
      },
      "response": {
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student with sId",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists and will be deleted",
          "params": {
            "stateObject": 123,
            "stateObjectType": "Int32"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/students/123"
      },
      "response": {
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to delete a student with sId",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId does not exist and will not be deleted",
          "params": {
            "stateObject": 1122,
            "stateObjectType": "Int32"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "path": "/students/1122"
      },
      "response": {
        "status": 404
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student with an invalid id",
      "pending": false,
      "request": {
        "method": "GET",
        "path": "/students/-1000"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "sId": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors.sId[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          }
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student with id 1",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists",
          "params": {
            "stateObject": {
              "GPA": 3,
              "name": "Mocky",
              "sId": 1
            },
            "stateObjectType": "StudentDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/1"
      },
      "response": {
        "body": {
          "content": {
            "GPA": 3,
            "name": "Mocky",
            "sId": 1
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student with id 1234",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists",
          "params": {
            "stateObject": {
              "GPA": 3.81,
              "name": "Mocky McMockName",
              "sId": 1234
            },
            "stateObjectType": "StudentDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/1234"
      },
      "response": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky McMockName",
            "sId": 1234
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student with id 404",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId does not exist"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/404"
      },
      "response": {
        "body": {
          "content": {
            "status": 404,
            "title": "error title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json"
          ]
        },
        "matchingRules": {
          "body": {
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          }
        },
        "status": 404
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get a student with id 4567",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists",
          "params": {
            "stateObject": {
              "GPA": null,
              "name": "Mocky McMockName",
              "sId": 4567
            },
            "stateObjectType": "StudentDto"
          }
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/4567"
      },
      "response": {
        "body": {
          "content": {
            "GPA": null,
            "name": "Mocky McMockName",
            "sId": 4567
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get all students",
      "pending": false,
      "providerStates": [
        {
          "name": "no students exist"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/"
      },
      "response": {
        "status": 204
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to get all students",
      "pending": false,
      "providerStates": [
        {
          "name": "some students exist"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": {
            "items": [
              {
                "GPA": 3.99,
                "name": "Test student 1",
                "sId": 1
              },
              {
                "GPA": 3.89,
                "name": "Test student 2",
                "sId": 2
              },
              {
                "GPA": 3.79,
                "name": "Test student 3",
                "sId": 3
              }
            ],
            "page": 1,
            "pageSize": 3,
            "totalCount": 3
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.items[0].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[0].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[1].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.items[2].sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to patch a non-existant student with sId 4567",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId does not exist"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky Mockson"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PATCH",
        "path": "/students/4567"
      },
      "response": {
        "status": 404
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to patch a student with sId",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists",
          "params": {
            "stateObject": {
              "GPA": 3.91,
              "name": "EXISTING STUDENT NAME",
              "sId": 123
            },
            "stateObjectType": "StudentDto"
          }
        },
        {
          "name": "a student with sId will be updated",
          "params": {
            "sId": 123,
            "stateObject": {
              "GPA": 3.91,
              "name": "Mocky"
            },
            "stateObjectType": "UpdateStudentDto"
          }
        }
      ],
      "request": {
        "body": {
          "content": {
            "name": "Mocky"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PATCH",
        "path": "/students/123"
      },
      "response": {
        "body": {
          "content": {
            "GPA": 3.91,
            "name": "Mocky",
            "sId": 123
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to patch a student with sId",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists",
          "params": {
            "stateObject": {
              "GPA": 3.91,
              "name": "EXISTING STUDENT NAME",
              "sId": 456
            },
            "stateObjectType": "StudentDto"
          }
        },
        {
          "name": "a student with sId will be updated",
          "params": {
            "sId": 456,
            "stateObject": {
              "GPA": 3.52,
              "name": "EXISTING STUDENT NAME"
            },
            "stateObjectType": "UpdateStudentDto"
          }
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.52
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PATCH",
        "path": "/students/456"
      },
      "response": {
        "body": {
          "content": {
            "GPA": 3.52,
            "name": "EXISTING STUDENT NAME",
            "sId": 456
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.GPA": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.sId": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student with sId",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists and will be updated",
          "params": {
            "sId": 123,
            "stateObject": {
              "GPA": 3.81,
              "name": "Mocky"
            },
            "stateObjectType": "UpdateStudentDto"
          }
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/123"
      },
      "response": {
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student with sId",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists and will be updated",
          "params": {
            "sId": 4567,
            "stateObject": {
              "GPA": null,
              "name": "Mocky"
            },
            "stateObjectType": "UpdateStudentDto"
          }
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": "Mocky"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/4567"
      },
      "response": {
        "status": 200
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student with sId 4567",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists but our request is missing an ETag"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky Mockson"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/4567"
      },
      "response": {
        "status": 428
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student with sId 4567",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists but was updated before us"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky Mockson"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/4567"
      },
      "response": {
        "status": 412
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student with sId 4567",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId exists but a race condition occurs at the database level"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky Mockson"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/4567"
      },
      "response": {
        "status": 409
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "a request to update a student with sId 4567",
      "pending": false,
      "providerStates": [
        {
          "name": "a student with sId does not exist"
        }
      ],
      "request": {
        "body": {
          "content": {
            "GPA": 3.81,
            "name": "Mocky Mockson"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "PUT",
        "path": "/students/4567"
      },
      "response": {
        "status": 404
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "an invalid request to add a new student 1",
      "pending": false,
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": null
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "name": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.name[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "an invalid request to add a new student 2",
      "pending": false,
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": ""
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "name": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.name[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "an invalid request to add a new student 3",
      "pending": false,
      "request": {
        "body": {
          "content": {
            "GPA": null,
            "name": "  \t\r\n   "
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "name": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.name[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "an invalid request to add a new student 4",
      "pending": false,
      "request": {
        "body": {
          "content": {
            "GPA": -4,
            "name": "Test Student Bad GPA"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "GPA": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.GPA[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    },
    {
      "description": "an invalid request to add a new student 5",
      "pending": false,
      "request": {
        "body": {
          "content": {
            "GPA": 2.222,
            "name": "Test Student Bad GPA"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/students/"
      },
      "response": {
        "body": {
          "content": {
            "errors": {
              "GPA": [
                "error message"
              ]
            },
            "status": 400,
            "title": "title"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=utf-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.errors": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.errors.GPA[0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "equality"
                }
              ]
            },
            "$.title": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      },
      "type": "Synchronous/HTTP"
    }
  ],
  "metadata": {
    "pactRust": {
      "ffi": "0.4.16",
      "models": "1.1.19"
    },
    "pactSpecification": {
      "version": "4.0"
    }
  },
  "provider": {
    "name": "SchoolDemoApi"
  }
}